{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniegera/Code/StephanieGeraAmil/Projects/jars-client/src/components/MovementForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as movementActions from '../actions/MovementsActions.js';\nimport * as jarActions from '../actions/JarsActions.js';\nimport * as selectionActions from '../actions/currentSelectionActions.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovementForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const jars = useSelector(state => state.jars ? state.jars : null);\n\n  const selectorMovementSelected = state => state.currentSelection.movement ? state.currentSelection.movement : null;\n\n  const movementSelected = useSelector(selectorMovementSelected);\n\n  const selectorFormPurpose = state => state.currentSelection.formPurpose ? state.currentSelection.formPurpose : null;\n\n  const actionBeingPerformed = useSelector(selectorFormPurpose);\n  const [movementData, setMovementData] = useState({\n    amount: '',\n    concept: '',\n    jar: [],\n    id: ''\n  });\n  const [validationMessage, setValidationMessage] = useState('');\n  useEffect(() => {\n    if (movementSelected != null) {\n      setMovementData({\n        concept: movementSelected.concept,\n        amount: movementSelected.amount,\n        jar: movementSelected.jar\n      });\n    } else {\n      setMovementData({ ...movementData,\n        id: \"\",\n        concept: \"\",\n        amount: '',\n        jar: []\n      });\n\n      if (actionBeingPerformed == \"Add Income\") {\n        setMovementData({ ...movementData,\n          jar: jars\n        });\n      }\n    }\n  }, [movementSelected]);\n\n  const handleSubmit = e => {\n    e.preventDefault(); //  if(actionBeingPerformed==\"Add Expense\" && movementData.amount>0){\n    //     setValidationMessage(\"Expenses should be < 0\");\n    //  }else \n\n    if (actionBeingPerformed == \"Add Income\" && movementData.jar.length != jars.length) {\n      setValidationMessage(\"Incomes should be applied to all jars\");\n    } else if (actionBeingPerformed == \"Edit Movement\" && movementData.amount > 0 && movementData.jar.length != jars.length) {\n      setValidationMessage(\"Incomes should be applied to all jars\");\n    } else {\n      if (movementSelected) {\n        dispatch(movementActions.updateMovement({\n          _id: movementSelected._id,\n          ...movementData\n        }));\n        dispatch(selectionActions.clearMovementSelected());\n        dispatch(selectionActions.clearFormPurpose());\n      } else {\n        if (actionBeingPerformed == \"Add Expense\") setMovementData({ ...movementData,\n          amount: -Math.abs(movementData.amount)\n        });\n        console.log(movementData);\n        dispatch(movementActions.createMovement(movementData));\n        setMovementData({ ...movementData,\n          concept: \"\",\n          amount: '',\n          jar: []\n        });\n        dispatch(selectionActions.clearFormPurpose());\n      }\n    }\n  };\n\n  const handleCheck = e => {\n    let updatedList = [...movementData.jar];\n\n    if (e.target.checked) {\n      updatedList = [...movementData.jar, jars.find(item => item._id == e.target.value)];\n      setMovementData({ ...movementData,\n        jar: updatedList\n      });\n    } else {\n      setMovementData({ ...movementData,\n        jar: updatedList.filter(item => item._id != e.target.value)\n      });\n    }\n  };\n\n  const signCheck = e => {\n    if (!isNaN(e.target.value)) {\n      setMovementData({ ...movementData,\n        amount: e.target.value\n      });\n    } else {\n      setMovementData({ ...movementData,\n        amount: 0\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [validationMessage != \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-pop-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"alert\",\n        children: validationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"close-alert\",\n        readOnly: true,\n        value: \"x\",\n        onClick: () => setValidationMessage(\"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"m-2\",\n          children: \"Concept: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          className: \"form-control\",\n          value: movementData.concept,\n          onChange: e => setMovementData({ ...movementData,\n            concept: e.target.value.toUpperCase()\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"m-2\",\n          children: \"Amount: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: movementData.amount ? actionBeingPerformed == \"Add Expense\" ? -Math.abs(movementData.amount) : movementData.amount : '',\n          onChange: e => {\n            signCheck(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"m-2\",\n          children: \"Jar: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox_list\",\n          children: jars.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox_item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: item._id,\n              type: \"checkbox\",\n              onChange: e => handleCheck(e),\n              checked: movementData.jar.map(jarInMovementData => jarInMovementData._id).indexOf(item._id) != -1 ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"submitButton cancel\",\n          readOnly: true,\n          value: \"x\",\n          onClick: () => {\n            dispatch(selectionActions.clearFormPurpose());\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: actionBeingPerformed ? actionBeingPerformed : \"Button\",\n          className: \"submitButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovementForm, \"ao82YdgeAuTy1dFRdDJGj36acxs=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = MovementForm;\nexport default MovementForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovementForm\");","map":{"version":3,"sources":["/Users/stephaniegera/Code/StephanieGeraAmil/Projects/jars-client/src/components/MovementForm.js"],"names":["React","useState","useEffect","movementActions","jarActions","selectionActions","useDispatch","useSelector","MovementForm","dispatch","jars","state","selectorMovementSelected","currentSelection","movement","movementSelected","selectorFormPurpose","formPurpose","actionBeingPerformed","movementData","setMovementData","amount","concept","jar","id","validationMessage","setValidationMessage","handleSubmit","e","preventDefault","length","updateMovement","_id","clearMovementSelected","clearFormPurpose","Math","abs","console","log","createMovement","handleCheck","updatedList","target","checked","find","item","value","filter","signCheck","isNaN","toUpperCase","map","jarInMovementData","indexOf","name"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect} from 'react'\nimport * as movementActions from '../actions/MovementsActions.js'\nimport * as jarActions from '../actions/JarsActions.js'\nimport * as selectionActions from '../actions/currentSelectionActions.js'\nimport { useDispatch , useSelector} from 'react-redux';\n\n const MovementForm = () => {\n   \n \n    const dispatch= useDispatch();\n     \n   \n    const jars = useSelector(state=>state.jars ? state.jars :null);\n\n   \n    const selectorMovementSelected=\n        (state) =>(state.currentSelection.movement ? state.currentSelection.movement :null);\n    const movementSelected = useSelector(selectorMovementSelected);\n\n    const selectorFormPurpose=\n        (state) =>(state.currentSelection.formPurpose ? state.currentSelection.formPurpose :null);\n    const actionBeingPerformed = useSelector(selectorFormPurpose);\n       \n    const [movementData, setMovementData]=useState({\n         amount:'',\n         concept:'',\n         jar:[],\n         id:''\n\n     })\n    const [validationMessage, setValidationMessage]=useState('')\n\n\n    useEffect(() => {  \n        \n        if (movementSelected!=null) {\n            setMovementData({concept:movementSelected.concept, amount: movementSelected.amount, jar:movementSelected.jar});\n           \n        }else{\n            \n            setMovementData({...movementData, id:\"\",concept:\"\", amount:'', jar:[]});\n            if(actionBeingPerformed==\"Add Income\"){setMovementData({...movementData, jar:jars});}\n\n        }\n    }, [movementSelected]);\n  \n    const handleSubmit=(e)=>{\n\n        e.preventDefault();\n\n        //  if(actionBeingPerformed==\"Add Expense\" && movementData.amount>0){\n        //     setValidationMessage(\"Expenses should be < 0\");\n        //  }else \n         if (actionBeingPerformed==\"Add Income\" && movementData.jar.length!=jars.length){\n            setValidationMessage(\"Incomes should be applied to all jars\");\n        }else if (actionBeingPerformed==\"Edit Movement\" && movementData.amount>0 && movementData.jar.length!=jars.length){\n            setValidationMessage(\"Incomes should be applied to all jars\");\n\n        }else{\n                if (movementSelected) {\n                \n                    dispatch(movementActions.updateMovement({_id:movementSelected._id,...movementData}));      \n                    dispatch(selectionActions.clearMovementSelected());\n                    dispatch(selectionActions.clearFormPurpose());\n                \n                }else{\n\n                    if(actionBeingPerformed==\"Add Expense\") setMovementData({...movementData, amount:-Math.abs(movementData.amount)})\n                    console.log(movementData)\n                    dispatch(movementActions.createMovement(movementData));      \n                    setMovementData({...movementData,concept:\"\", amount:'', jar:[]});\n                    dispatch(selectionActions.clearFormPurpose());\n                }\n            }\n        \n    };\n    const handleCheck = (e) => {\n      \n        let updatedList = [...movementData.jar];\n    \n        if (e.target.checked) {\n                \n        updatedList = [...movementData.jar, jars.find(item=>item._id==e.target.value)];\n        setMovementData({...movementData, jar:updatedList})\n        } else {\n            setMovementData({...movementData, jar:updatedList.filter(item=>item._id!=e.target.value)})\n        \n        }\n    \n      \n    };\n    const signCheck=(e)=>{\n        if(!isNaN(e.target.value)){\n            setMovementData({...movementData, amount:e.target.value})\n            }else{\n                 setMovementData({...movementData, amount:0})\n            }\n    }\n    \n  \n    return (\n        <div className=\"form\">\n           { validationMessage !=\"\" &&\n             <div className=\"alert-pop-up\">\n                <span className=\"alert\">{validationMessage}</span>\n                <input className=\"close-alert\" readOnly value=\"x\" onClick={()=>setValidationMessage(\"\")}/>\n            </div>\n             }\n          <form onSubmit={handleSubmit}>\n              <div className=\"form-group\"> \n                  <label className=\"m-2\">Concept: </label>\n                  <input  type=\"text\"\n                      required\n                      className=\"form-control\"\n                      value={movementData.concept}\n                      onChange={(e)=>setMovementData({...movementData, concept:(e.target.value).toUpperCase()})}\n                      />\n              </div>\n              <div className=\"form-group\">\n                  <label className=\"m-2\">Amount: </label>\n                  <input \n                      type=\"text\" \n                      className=\"form-control\"\n                      value={(movementData.amount)?((actionBeingPerformed==\"Add Expense\")?-Math.abs(movementData.amount):movementData.amount):''}\n                      onChange={(e)=>{signCheck(e)}}\n                      />\n              </div>\n              <div className=\"form-group\">\n                  <label className=\"m-2\">Jar: </label>\n                \n                    <div className=\"checkbox_list\"> \n                     {jars.map( item => <div  key={item._id} className=\"checkbox_item\" >\n                                    <input value={item._id} type=\"checkbox\"  onChange={(e)=>handleCheck(e)} checked={movementData.jar.map(jarInMovementData=>jarInMovementData._id).indexOf(item._id)!=-1 ?true:false} /> \n                                    <span>{item.name} </span>\n                             </div>)}\n                    </div>\n\n\n\n              </div>\n\n              <div className=\"bottom mt-5\">\n                  <input className=\"submitButton cancel\" readOnly value=\"x\" onClick={()=>{ dispatch(selectionActions.clearFormPurpose());}}/>\n                <input type=\"submit\" value={actionBeingPerformed?actionBeingPerformed:\"Button\"} className=\"submitButton\" />\n                 \n              </div>  \n              \n         \n          </form>\n        </div>\n    )\n}\nexport default MovementForm;\n"]},"metadata":{},"sourceType":"module"}