{"ast":null,"code":"import * as actions from '../constants/actionTypes';\nimport * as api from '../api/api.js'; //action creators\n\nexport const getJars = () => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await api.fetchJars();\n    const action = {\n      type: actions.FETCH_ALL_JARS,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createJar = jar => async (dispatch, getState) => {\n  //async(dispatch) comes from redux-thunk\n  try {\n    const {\n      data\n    } = await api.createJar(jar);\n    const action = {\n      type: actions.CREATE_JAR,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateJar = updatedJar => async dispatch => {\n  try {\n    await api.updateJar(updatedJar);\n    const action = {\n      type: actions.UPDATE_JAR,\n      payload: updatedJar\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteJar = jar_id => async dispatch => {\n  try {\n    await api.deleteJar(jar_id);\n    const action = {\n      type: actions.DELETE_JAR,\n      payload: jar_id\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/stephaniegera/Code/StephanieGeraAmil/Projects/jars-client/src/actions/JarsActions.js"],"names":["actions","api","getJars","dispatch","getState","data","fetchJars","action","type","FETCH_ALL_JARS","payload","error","console","log","createJar","jar","CREATE_JAR","updateJar","updatedJar","UPDATE_JAR","deleteJar","jar_id","DELETE_JAR"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,0BAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,eAArB,C,CACA;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAI,OAAMC,QAAN,EAAeC,QAAf,KAA0B;AACjD,MAAI;AAEA,UAAM;AAACC,MAAAA;AAAD,QAAQ,MAAMJ,GAAG,CAACK,SAAJ,EAApB;AACA,UAAMC,MAAM,GAAC;AAACC,MAAAA,IAAI,EAACR,OAAO,CAACS,cAAd;AAA8BC,MAAAA,OAAO,EAACL;AAAtC,KAAb;AACAF,IAAAA,QAAQ,CAACI,MAAD,CAAR;AAGH,GAPD,CAOE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,CAZM;AAaP,OAAO,MAAMG,SAAS,GAAEC,GAAD,IAAO,OAAMZ,QAAN,EAAeC,QAAf,KAA0B;AACpD;AACA,MAAI;AAEA,UAAM;AAACC,MAAAA;AAAD,QAAQ,MAAMJ,GAAG,CAACa,SAAJ,CAAcC,GAAd,CAApB;AACA,UAAMR,MAAM,GAAC;AAACC,MAAAA,IAAI,EAACR,OAAO,CAACgB,UAAd;AAA0BN,MAAAA,OAAO,EAACL;AAAlC,KAAb;AACAF,IAAAA,QAAQ,CAACI,MAAD,CAAR;AAGH,GAPD,CAOE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAZM;AAaP,OAAO,MAAMM,SAAS,GAAEC,UAAD,IAAc,MAAMf,QAAN,IAAiB;AAClD,MAAI;AACA,UAAMF,GAAG,CAACgB,SAAJ,CAAcC,UAAd,CAAN;AACA,UAAMX,MAAM,GAAC;AAACC,MAAAA,IAAI,EAACR,OAAO,CAACmB,UAAd;AAA0BT,MAAAA,OAAO,EAACQ;AAAlC,KAAb;AACAf,IAAAA,QAAQ,CAACI,MAAD,CAAR;AAEH,GALD,CAKE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CATM;AAUP,OAAO,MAAMS,SAAS,GAAEC,MAAD,IAAU,MAAMlB,QAAN,IAAiB;AAC9C,MAAI;AAEA,UAAMF,GAAG,CAACmB,SAAJ,CAAcC,MAAd,CAAN;AACA,UAAMd,MAAM,GAAC;AAACC,MAAAA,IAAI,EAAER,OAAO,CAACsB,UAAf;AAA0BZ,MAAAA,OAAO,EAACW;AAAlC,KAAb;AACAlB,IAAAA,QAAQ,CAACI,MAAD,CAAR;AAEH,GAND,CAME,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAGJ,CAZM","sourcesContent":["import * as actions from '../constants/actionTypes'\nimport * as api from '../api/api.js';\n//action creators\nexport const getJars = ()=>async(dispatch,getState)=>{\n    try {\n        \n        const {data}= await api.fetchJars();\n        const action={type:actions.FETCH_ALL_JARS, payload:data};\n        dispatch(action);\n\n\n    } catch (error) {\n        console.log(error);\n    }\n   \n}\nexport const createJar=(jar)=>async(dispatch,getState)=>{\n    //async(dispatch) comes from redux-thunk\n    try {\n\n        const {data} =await api.createJar(jar);\n        const action={type:actions.CREATE_JAR, payload:data};\n        dispatch(action);\n\n        \n    } catch (error) {\n        console.log(error);\n    }\n}\nexport const updateJar=(updatedJar)=>async(dispatch)=>{\n    try {\n        await api.updateJar(updatedJar);\n        const action={type:actions.UPDATE_JAR, payload:updatedJar};\n        dispatch(action);\n        \n    } catch (error) {\n        console.log(error);\n    }\n}\nexport const deleteJar=(jar_id)=>async(dispatch)=>{\n    try {\n    \n        await api.deleteJar(jar_id);\n        const action={type: actions.DELETE_JAR,payload:jar_id};\n        dispatch(action);\n        \n    } catch (error) {\n        console.log(error);\n    }\n\n    \n}\n"]},"metadata":{},"sourceType":"module"}