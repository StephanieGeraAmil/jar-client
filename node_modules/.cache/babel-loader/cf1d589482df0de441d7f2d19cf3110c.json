{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniegera/Code/StephanieGeraAmil/Projects/jars-client/src/components/AvaiableOnJar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AvaiableOnJar = _ref => {\n  _s();\n\n  let {\n    jar\n  } = _ref;\n  const movements = useSelector(state => state.movements);\n  const transferences = useSelector(state => state.transactions);\n  const [amount, setAmount] = useState(0);\n  useEffect(() => {\n    let balance = 0;\n    movements.map(movement => {\n      movement.jar.map(element => {\n        if (element._id == jar._id) {\n          let newBalance = 0;\n\n          if (movement.amount < 0) {\n            //is expense\n            newBalance = balance + movement.amount / movement.jar.length;\n          } else {\n            const percentageThatHad = movement.jar.find(item => item._id == jar._id).percentage;\n            newBalance = balance + percentageThatHad / 100 * movement.amount;\n          }\n\n          balance = newBalance;\n        }\n      });\n    });\n    transferences.map(item => {\n      if (item.origin == jar._id) {\n        balance -= item.amount;\n      }\n\n      if (item.destination == jar._id) {\n        balance += item.amount;\n      }\n    });\n    setAmount(balance);\n  }, [movements, transferences]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [(() => {\n      let fullnes = 'Empty';\n\n      if (amount < 0) {\n        fullnes = 'Debt';\n      } else if (amount == 0) {\n        fullnes = 'Empty';\n      } else if (amount <= 100 && amount > 0) {\n        fullnes = 'SomeCoin';\n      } else if (amount <= 1000 && amount > 100) {\n        fullnes = 'Medium';\n      } else if (amount >= 1000 && amount <= 10000) {\n        fullnes = 'Full';\n      } else if (amount >= 10000) {\n        fullnes = 'Filled';\n      }\n\n      ;\n\n      switch (fullnes) {\n        case 'Debt':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jar_img div_img\",\n            style: {\n              backgroundImage: `url(\"/imgs/jar0coins.png\")`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 40\n          }, this);\n\n        case 'Empty':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jar_img div_img\",\n            style: {\n              backgroundImage: `url(\"/imgs/jar0coins.png\")`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 40\n          }, this);\n\n        case 'SomeCoin':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jar_img div_img\",\n            style: {\n              backgroundImage: `url(\"/imgs/almostEmptyJar.png\")`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 43\n          }, this);\n\n        case 'Medium':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jar_img div_img\",\n            style: {\n              backgroundImage: `url(\"/imgs/jarMediumCoins.png\")`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 41\n          }, this);\n\n        case \"Full\":\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jar_img div_img\",\n            style: {\n              backgroundImage: `url(\"/imgs/jarManycoins.png\")`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 38\n          }, this);\n\n        case \"Filled\":\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jar_img div_img\",\n            style: {\n              backgroundImage: `url(\"/imgs/filledJar.png\")`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 40\n          }, this);\n      }\n    })(), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"balance_jar\",\n      children: [\"$\", amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AvaiableOnJar, \"za/8YVODnjI+K1/QHPiQflq/oLc=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = AvaiableOnJar;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvaiableOnJar\");","map":{"version":3,"sources":["/Users/stephaniegera/Code/StephanieGeraAmil/Projects/jars-client/src/components/AvaiableOnJar.js"],"names":["React","useState","useEffect","useSelector","AvaiableOnJar","jar","movements","state","transferences","transactions","amount","setAmount","balance","map","movement","element","_id","newBalance","length","percentageThatHad","find","item","percentage","origin","destination","fullnes","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState , useEffect} from 'react'\nimport { useSelector} from 'react-redux';\n\nexport const AvaiableOnJar = ({jar}) => {\n\n    const movements=useSelector((state)=>state.movements);\n    const transferences=useSelector((state)=>state.transactions);\n    const [amount, setAmount]=useState(0)\n\n    \n    useEffect ( () => {\n    let balance=0;\n                       \n       movements.map(movement =>{\n        \n            movement.jar.map(element=>\n                {\n    \n                    if(element._id==jar._id){\n                       \n                        let newBalance=0;\n                        if(movement.amount<0){\n                            //is expense\n                            newBalance=balance+(movement.amount)/(movement.jar.length);\n                        }else{\n                            const percentageThatHad=movement.jar.find(item=>item._id==jar._id).percentage;   \n                            newBalance=balance+(percentageThatHad/100)*movement.amount;\n                            \n                        }\n                         balance=newBalance;\n\n                    }\n                  \n                }\n            );\n           \n              \n        }\n       );\n     \n        transferences.map(item=>{\n                \n                 if(item.origin==jar._id){\n                    balance-=item.amount;\n                    \n                 }\n                 if(item.destination==jar._id){\n                      balance+=item.amount;\n                 }\n                \n                     \n\n            });\n    setAmount(balance);\n  \n        }\n    , [movements,transferences]);\n\n   \n    return (\n        <>\n\n         {(() =>{ \n            let fullnes = 'Empty';\n\n            if(amount<0){\n              fullnes= 'Debt';\n            }else if(amount==0){\n                fullnes= 'Empty';\n            }else if(amount<=100 && amount>0){\n                fullnes='SomeCoin';\n            }else if(amount<=1000 && amount>100){\n                fullnes='Medium';\n            }else if(amount>=1000 && amount<=10000 ){\n                fullnes='Full';\n            }else if(amount>=10000){\n                fullnes='Filled';\n            };  \n\n\n        \n             \n            switch(fullnes){\n              case ('Debt'): return  ( <div  className=\"jar_img div_img\" style={{\n                                                backgroundImage: `url(\"/imgs/jar0coins.png\")`\n                                                }}>\n                                        </div>)\n              case ('Empty'): return  (<div  className=\"jar_img div_img\" style={{\n                                                backgroundImage: `url(\"/imgs/jar0coins.png\")`\n                                                }}>\n                                        </div>)\n              case ('SomeCoin'): return ( <div  className=\"jar_img div_img\" style={{\n                                        backgroundImage: `url(\"/imgs/almostEmptyJar.png\")`\n                                        }}>\n                                    </div>)\n              case ('Medium'): return ( <div  className=\"jar_img div_img\" style={{\n                                                            backgroundImage: `url(\"/imgs/jarMediumCoins.png\")`\n                                                            }}>\n                                                        </div>)\n              case (\"Full\"): return (<div  className=\"jar_img div_img\" style={{\n                                                backgroundImage: `url(\"/imgs/jarManycoins.png\")`\n                                                }}>\n                                        </div>   ) \n              case (\"Filled\"): return (<div  className=\"jar_img div_img\" style={{\n                                                backgroundImage: `url(\"/imgs/filledJar.png\")`\n                                                }}>\n                                        </div>   ) \n             \n            }\n          })()\n      }\n             <h4 className=\"balance_jar\">${amount}</h4>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}