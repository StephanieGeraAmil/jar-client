{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniegera/Code/StephanieGeraAmil/Projects/copyclient/src/components/JarForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createJar, updateJar } from '../actions/JarsActions.js';\nimport { clearJarSelected, clearFormPurpose, settingFormPurposeToDistributePercentagesOfJars } from '../actions/currentSelectionActions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JarForm = () => {\n  _s();\n\n  const [jarData, setJarData] = useState({\n    percentage: 0,\n    balance: 0,\n    name: ''\n  });\n  const [validationMessage, setValidationMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const jars = useSelector(state => state.jars ? state.jars : null);\n  const jarSelected = useSelector(state => state.currentSelection.jar ? state.currentSelection.jar : null);\n  useEffect(() => {\n    if (jarSelected != null) {\n      setJarData({\n        percentage: jarSelected.percentage,\n        balance: jarSelected.balance,\n        name: jarSelected.name\n      });\n    } else {\n      setJarData({ ...jarData,\n        percentage: \"\",\n        name: \"\"\n      });\n    }\n  }, [jarSelected]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (jars.find(jar => jar.name == jarData.name) != null && jarSelected == null) {\n      setValidationMessage(\"There already is a Jar  with that name, please choose another one\");\n    } else {\n      setValidationMessage(\"\");\n\n      if (jarSelected) {\n        dispatch(updateJar({\n          _id: jarSelected._id,\n          ...jarData\n        }));\n        dispatch(clearJarSelected());\n        dispatch(clearFormPurpose());\n      } else {\n        dispatch(createJar(jarData));\n        setJarData({ ...jarData,\n          percentage: \"\",\n          name: \"\"\n        });\n        dispatch(clearFormPurpose());\n        dispatch(settingFormPurposeToDistributePercentagesOfJars());\n      }\n    }\n  };\n\n  const handleCancel = () => {\n    dispatch(clearFormPurpose());\n    dispatch(clearJarSelected());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [validationMessage != \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-pop-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"alert\",\n        children: validationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"close-alert\",\n        readOnly: true,\n        value: \"x\",\n        onClick: () => setValidationMessage(\"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"m-2\",\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          className: \"form-control\",\n          value: jarData.name,\n          onChange: e => setJarData({ ...jarData,\n            name: e.target.value.toUpperCase()\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this), jarSelected == null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"m-2\",\n          children: \"Percentage: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: jarData.percentage,\n          onChange: e => setJarData({ ...jarData,\n            percentage: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"submitButton cancel\",\n          readOnly: true,\n          value: \"X\",\n          onClick: () => {\n            handleCancel();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: jarSelected == null ? \"Add Jar\" : \"Edit\",\n          className: \"submitButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JarForm, \"nM43veCg2dVXEPzd4gBGNtwZccs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = JarForm;\nexport default JarForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"JarForm\");","map":{"version":3,"sources":["/Users/stephaniegera/Code/StephanieGeraAmil/Projects/copyclient/src/components/JarForm.js"],"names":["React","useState","useEffect","useDispatch","useSelector","createJar","updateJar","clearJarSelected","clearFormPurpose","settingFormPurposeToDistributePercentagesOfJars","JarForm","jarData","setJarData","percentage","balance","name","validationMessage","setValidationMessage","dispatch","jars","state","jarSelected","currentSelection","jar","handleSubmit","e","preventDefault","find","_id","handleCancel","target","value","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,SAAR,EAAkBC,SAAlB,QAAkC,2BAAlC;AACA,SAAQC,gBAAR,EAAyBC,gBAAzB,EAA2CC,+CAA3C,QAAiG,uCAAjG;;;AAGC,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAsBX,QAAQ,CAAC;AACjCY,IAAAA,UAAU,EAAC,CADsB;AAEjCC,IAAAA,OAAO,EAAC,CAFyB;AAGjCC,IAAAA,IAAI,EAAC;AAH4B,GAAD,CAApC;AAMD,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA0ChB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAMiB,QAAQ,GAAEf,WAAW,EAA3B;AAEA,QAAMgB,IAAI,GAAGf,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACD,IAAN,GAAaC,KAAK,CAACD,IAAnB,GAAyB,IAArC,CAAxB;AACA,QAAME,WAAW,GAAGjB,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACE,gBAAN,CAAuBC,GAAvB,GAA6BH,KAAK,CAACE,gBAAN,CAAuBC,GAApD,GAAyD,IAArE,CAA/B;AAEArB,EAAAA,SAAS,CAAC,MAAM;AAEhB,QAAImB,WAAW,IAAE,IAAjB,EAAuB;AACpBT,MAAAA,UAAU,CAAC;AAACC,QAAAA,UAAU,EAACQ,WAAW,CAACR,UAAxB;AAAoCC,QAAAA,OAAO,EAAEO,WAAW,CAACP,OAAzD;AAAkEC,QAAAA,IAAI,EAAEM,WAAW,CAACN;AAApF,OAAD,CAAV;AACD,KAFF,MAEM;AACDH,MAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAYE,QAAAA,UAAU,EAAC,EAAvB;AAA2BE,QAAAA,IAAI,EAAC;AAAhC,OAAD,CAAV;AACH;AACD,GAPQ,EAON,CAACM,WAAD,CAPM,CAAT;;AAUA,QAAMG,YAAY,GAAEC,CAAD,IAAK;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGP,IAAI,CAACQ,IAAL,CAAUJ,GAAG,IAAEA,GAAG,CAACR,IAAJ,IAAUJ,OAAO,CAACI,IAAjC,KAAwC,IAAxC,IAAgDM,WAAW,IAAE,IAAhE,EAAqE;AACjEJ,MAAAA,oBAAoB,CAAC,mEAAD,CAApB;AAEH,KAHD,MAGK;AACGA,MAAAA,oBAAoB,CAAC,EAAD,CAApB;;AAEA,UAAII,WAAJ,EAAiB;AACbH,QAAAA,QAAQ,CAACZ,SAAS,CAAC;AAACsB,UAAAA,GAAG,EAACP,WAAW,CAACO,GAAjB;AAAqB,aAAGjB;AAAxB,SAAD,CAAV,CAAR;AACAO,QAAAA,QAAQ,CAACX,gBAAgB,EAAjB,CAAR;AACAW,QAAAA,QAAQ,CAACV,gBAAgB,EAAjB,CAAR;AAEH,OALD,MAKK;AACDU,QAAAA,QAAQ,CAACb,SAAS,CAACM,OAAD,CAAV,CAAR;AACAC,QAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaE,UAAAA,UAAU,EAAC,EAAxB;AAA4BE,UAAAA,IAAI,EAAC;AAAjC,SAAD,CAAV;AACAG,QAAAA,QAAQ,CAACV,gBAAgB,EAAjB,CAAR;AACAU,QAAAA,QAAQ,CAACT,+CAA+C,EAAhD,CAAR;AAEH;AACR;AAGJ,GAxBD;;AAyBA,QAAMoB,YAAY,GAAC,MAAI;AACnBX,IAAAA,QAAQ,CAACV,gBAAgB,EAAjB,CAAR;AACAU,IAAAA,QAAQ,CAACX,gBAAgB,EAAjB,CAAR;AACH,GAHD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACIS,iBAAiB,IAAG,EAApB,iBACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACG;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA,kBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAO,QAAA,SAAS,EAAC,aAAjB;AAA+B,QAAA,QAAQ,MAAvC;AAAwC,QAAA,KAAK,EAAC,GAA9C;AAAkD,QAAA,OAAO,EAAE,MAAIC,oBAAoB,CAAC,EAAD;AAAnF;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL,eAQE;AAAM,MAAA,QAAQ,EAAEO,YAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,IAAI,EAAC,MAAb;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,SAAS,EAAC,cAFd;AAGI,UAAA,KAAK,EAAEb,OAAO,CAACI,IAHnB;AAII,UAAA,QAAQ,EAAGU,CAAD,IAAKb,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaI,YAAAA,IAAI,EAAEU,CAAC,CAACK,MAAF,CAASC,KAAV,CAAiBC,WAAjB;AAAlB,WAAD;AAJ7B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAUKX,WAAW,IAAE,IAAb,iBAAqB;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCAClB;AAAO,UAAA,SAAS,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADkB,eAElB;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,SAAS,EAAC,cAFd;AAGI,UAAA,KAAK,EAAEV,OAAO,CAACE,UAHnB;AAII,UAAA,QAAQ,EAAGY,CAAD,IAAKb,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaE,YAAAA,UAAU,EAACY,CAAC,CAACK,MAAF,CAASC;AAAjC,WAAD;AAJ7B;AAAA;AAAA;AAAA;AAAA,gBAFkB;AAAA;AAAA;AAAA;AAAA;AAAA,cAV1B,eAsBI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACK;AAAO,UAAA,SAAS,EAAC,qBAAjB;AAAuC,UAAA,QAAQ,MAA/C;AAAgD,UAAA,KAAK,EAAC,GAAtD;AAA0D,UAAA,OAAO,EAAE,MAAI;AAACF,YAAAA,YAAY;AAAI;AAAxF;AAAA;AAAA;AAAA;AAAA,gBADL,eAEE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAGR,WAAW,IAAE,IAAb,GAAmB,SAAnB,GAA6B,MAA1D;AAAiE,UAAA,SAAS,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH,CA7FA;;GAAMX,O;UAQaP,W,EAEHC,W,EACOA,W;;;KAXjBM,O;AA8FP,eAAeA,OAAf","sourcesContent":["import React ,{useState, useEffect} from 'react'\nimport { useDispatch,useSelector } from 'react-redux';\nimport {createJar,updateJar} from '../actions/JarsActions.js'\nimport {clearJarSelected,clearFormPurpose, settingFormPurposeToDistributePercentagesOfJars} from '../actions/currentSelectionActions.js'\n\n\n const JarForm = () => {\n     const [jarData, setJarData]=useState({\n         percentage:0,\n         balance:0,\n         name:''\n\n     })\n    const [validationMessage, setValidationMessage]=useState(\"\");\n    const dispatch= useDispatch();\n   \n    const jars = useSelector((state) =>(state.jars ? state.jars :null));\n    const jarSelected = useSelector((state) =>(state.currentSelection.jar ? state.currentSelection.jar :null));\n       \n    useEffect(() => {\n       \n    if (jarSelected!=null) {\n       setJarData({percentage:jarSelected.percentage, balance: jarSelected.balance, name: jarSelected.name});\n     }else{\n         setJarData({...jarData,percentage:\"\", name:\"\"});\n     }\n    }, [jarSelected]);     \n\n  \n    const handleSubmit=(e)=>{\n        e.preventDefault();\n\n        if(jars.find(jar=>jar.name==jarData.name)!=null && jarSelected==null){\n            setValidationMessage(\"There already is a Jar  with that name, please choose another one\");\n\n        }else{  \n                setValidationMessage(\"\");\n      \n                if (jarSelected) {\n                    dispatch(updateJar({_id:jarSelected._id,...jarData}));\n                    dispatch(clearJarSelected());\n                    dispatch(clearFormPurpose());\n                    \n                }else{\n                    dispatch(createJar(jarData));\n                    setJarData({...jarData, percentage:\"\", name:\"\"});\n                    dispatch(clearFormPurpose());\n                    dispatch(settingFormPurposeToDistributePercentagesOfJars());\n                    \n                }\n        }\n      \n       \n    };\n    const handleCancel=()=>{\n        dispatch(clearFormPurpose());\n        dispatch(clearJarSelected());\n    }\n\n  \n    return (\n        <div className=\"form\">\n          { validationMessage !=\"\" &&\n             <div className=\"alert-pop-up\">\n                <span className=\"alert\">{validationMessage}</span>\n                <input className=\"close-alert\" readOnly value=\"x\" onClick={()=>setValidationMessage(\"\")}/>\n            </div>\n          \n         }\n          <form onSubmit={handleSubmit}>\n              <div className=\"form-group\"> \n                  <label className=\"m-2\">Name: </label>\n                  <input  type=\"text\"\n                      required\n                      className=\"form-control\"\n                      value={jarData.name}\n                      onChange={(e)=>setJarData({...jarData, name:(e.target.value).toUpperCase()})}\n                      />\n              </div>\n             { jarSelected==null && <div className=\"form-group\">\n                  <label className=\"m-2\">Percentage: </label>\n                  <input \n                      type=\"text\" \n                      className=\"form-control\"\n                      value={jarData.percentage}\n                      onChange={(e)=>setJarData({...jarData, percentage:e.target.value})}\n                      />\n              </div>}\n         \n            \n\n              <div className=\"bottom mt-5\">\n                   <input className=\"submitButton cancel\" readOnly value=\"X\" onClick={()=>{handleCancel() }}/>\n                <input type=\"submit\" value={ jarSelected==null? \"Add Jar\":\"Edit\"}className=\"submitButton\" />\n                               \n              </div>            \n          </form>\n        </div>\n    )\n}\nexport default JarForm;\n"]},"metadata":{},"sourceType":"module"}