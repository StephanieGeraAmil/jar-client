{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniegera/Code/StephanieGeraAmil/Projects/copyclient/src/components/JarMoneyTransfer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as transferActions from '../actions/TransferActions.js';\nimport * as selectionActions from '../actions/currentSelectionActions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JarMoneyTransfer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const selectorGetJars = state => state.jars ? state.jars : null;\n\n  const jars = useSelector(selectorGetJars);\n\n  const selectorOfSelectedJar = state => state.currentSelection.jar ? state.currentSelection.jar : null;\n\n  const jarSelected = useSelector(selectorOfSelectedJar);\n  const [destinationJar, setDestinationJar] = useState(jars[0]);\n  const [amount, setAmount] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(transferActions.createTransference({\n      origin: jarSelected._id,\n      destination: destinationJar._id,\n      amount\n    }));\n    setDestinationJar({});\n    dispatch(selectionActions.clearMovementSelected());\n    dispatch(selectionActions.clearFormPurpose());\n  };\n\n  const handleDropdownChange = e => {\n    const optionClicked = e.target.value;\n    setDestinationJar(jars.find(item => item._id == optionClicked));\n  };\n\n  const handleCancel = () => {\n    dispatch(selectionActions.clearMovementSelected());\n    dispatch(selectionActions.clearFormPurpose());\n  };\n\n  useEffect(() => {\n    setDestinationJar(jars[0]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"m-2\",\n          children: \"Origin Jar: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          className: \"form-control\",\n          value: jarSelected.name,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"m-2\",\n          children: \"DestinationJar: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control  dropdown-control\",\n          value: destinationJar,\n          onChange: e => handleDropdownChange(e),\n          children: jars.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: item.name\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"m-2\",\n          children: \"Amount: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"submitButton cancel\",\n          readOnly: true,\n          value: \"x\",\n          onClick: () => {\n            handleCancel();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Transfer\",\n          className: \"submitButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JarMoneyTransfer, \"BTPYXzAW9nFegqzo1SIf7eg2cJ4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = JarMoneyTransfer;\nexport default JarMoneyTransfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"JarMoneyTransfer\");","map":{"version":3,"sources":["/Users/stephaniegera/Code/StephanieGeraAmil/Projects/copyclient/src/components/JarMoneyTransfer.js"],"names":["React","useEffect","useState","useDispatch","useSelector","transferActions","selectionActions","JarMoneyTransfer","dispatch","selectorGetJars","state","jars","selectorOfSelectedJar","currentSelection","jar","jarSelected","destinationJar","setDestinationJar","amount","setAmount","handleSubmit","e","preventDefault","createTransference","origin","_id","destination","clearMovementSelected","clearFormPurpose","handleDropdownChange","optionClicked","target","value","find","item","handleCancel","name","map"],"mappings":"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","sourcesContent":["import React ,{useEffect, useState} from 'react'\nimport { useDispatch,useSelector } from 'react-redux';\nimport * as transferActions from '../actions/TransferActions.js'\nimport * as selectionActions from '../actions/currentSelectionActions.js'\n\n const JarMoneyTransfer = () => {\n    \n    const dispatch= useDispatch();\n       \n    const selectorGetJars=\n        (state) =>(state.jars ? state.jars :null);\n    const jars = useSelector(selectorGetJars);\n    const selectorOfSelectedJar=\n        (state) =>(state.currentSelection.jar ? state.currentSelection.jar :null);\n    const jarSelected = useSelector(selectorOfSelectedJar);\n\n    const [destinationJar, setDestinationJar]=useState(jars[0]);\n    const [amount, setAmount]=useState('');\n  \n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        dispatch(transferActions.createTransference({origin:jarSelected._id,destination:destinationJar._id,amount}));\n        setDestinationJar({});\n        dispatch(selectionActions.clearMovementSelected());\n         dispatch(selectionActions.clearFormPurpose());\n        };\n\n    const handleDropdownChange=(e)=>{\n            const optionClicked = e.target.value; \n            setDestinationJar(jars.find(item=>item._id==optionClicked));  \n        };\n\n\n    const handleCancel=()=>{\n        dispatch(selectionActions.clearMovementSelected());\n        dispatch(selectionActions.clearFormPurpose());\n\n    }\n    useEffect(()=>{\n          setDestinationJar(jars[0])\n  \n    },[])\n\n  \n    return (\n        <div className=\"form\">\n          <form onSubmit={handleSubmit}>\n              <div className=\"form-group\"> \n                  <label className=\"m-2\">Origin Jar: </label>\n                  <input  type=\"text\"\n                      required\n                      className=\"form-control\"\n                      value={jarSelected.name}\n                      readOnly={true}\n                      />\n              </div>\n\n \n\n              <div className=\"form-group\">\n                  <label className=\"m-2\">DestinationJar: </label>\n                  <select  className=\"form-control  dropdown-control\" value={destinationJar}   onChange={(e)=>handleDropdownChange(e)}>\n                        {jars.map(item=><option  key={item._id}>{item.name}</option>)}\n                    </select>\n              </div>\n                 <div className=\"form-group\">\n                  <label className=\"m-2\">Amount: </label>\n                  <input \n                      type=\"text\" \n                      className=\"form-control\"\n                      value={amount}\n                      onChange={(e)=>setAmount(e.target.value)}\n                      />\n              </div>\n         \n            \n\n              <div className=\"bottom mt-5\">\n                <input className=\"submitButton cancel\" readOnly value=\"x\" onClick={()=>{ handleCancel() }}/>\n                <input type=\"submit\" value=\"Transfer\" className=\"submitButton\" />\n            \n              </div>            \n          </form>\n        </div>\n    )\n}\nexport default JarMoneyTransfer;\n"]},"metadata":{},"sourceType":"module"}